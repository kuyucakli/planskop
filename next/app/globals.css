@import "tailwindcss";

@theme {
  /* --color-*: initial; */
  --color-primary: oklch(0.67 0.13 175.13);
  --color-primary-dark: oklch(0.5 0.04 182.1);
  --color-secondary: oklch(0.67 0.13 200);
  --color-purple: #3f3cbb;
  --color-midnight: #121063;
  --color-tahiti: #3ab7bf;
  --color-bermuda: #78dcca;

  --font-kira-hareng: var(--font-kira-hareng);
  --font-roboto-flex: var(--font-roboto-flex);
}

@layer system {
  /* --- variables --- */
  :root {
    /* related to browser default styles */
    color-scheme: light dark;
  }
  :root:has(input#toggle-theme:checked) {
    .color-filter-invertable {
      filter: invert(0);
    }
  }

  :root:has(input#toggle-theme:not(:checked)) {
    & .color-filter-invertable {
      filter: invert(1);
    }
  }

  @media (prefers-color-scheme: dark) {
  }

  html,
  body {
    max-width: 100vw;
    overflow-x: hidden;
    height: 100%;
  }

  [aria-hidden] {
    opacity: 0.8;
    filter: blur(1px);
  }

  [disabled],
  [aria-disabled="true"] {
    opacity: 0.5;
    pointer-events: none;
  }

  form {
    display: flex;
    flex-direction: column;
    max-width: 500px;
    gap: var(--spc-8);

    & * {
      color: inherit;
    }

    & > * {
      width: 100%;
    }

    & button {
      align-self: center;
      border: none;
      & svg {
        vertical-align: middle;
      }
    }

    & section.expanded {
      border: 1px solid var(--md-sys-color-outline);
      padding: var(--spc-3);
    }

    & label {
      position: relative;
    }

    & label > span {
      position: absolute;
      top: 24px;
      left: 8px;
      font-size: 1.2rem;
      transition: all 0.2s ease-in;
    }
    &
      label:has(:focus, :valid, :is(textarea, input):not(:placeholder-shown))
      > span {
      top: 4px;
      font-size: 0.9rem;
    }

    & label > :is(input, textarea) {
      width: 100%;
    }

    & input:is([type="text"]) {
      height: 60px;
      font-size: 1.2rem;
    }

    & ::placeholder {
      opacity: 0;
    }

    input,
    textarea,
    select {
      background-color: var(--md-sys-color-background);
    }

    & input[type="checkbox"] {
      /* Add if not using autoprefixer */
      -webkit-appearance: none;
      /* Remove most all native input styles */
      appearance: none;
      /* For iOS < 15 */
      background-color: var(--form-background);
      /* Not removed via appearance */
      margin: 0;

      font: inherit;
      color: currentColor;
      width: 1.15em;
      height: 1.15em;
      border: 0.15em solid currentColor;
      border-radius: 0.15em;
      transform: translateY(-0.075em);
      display: grid;
      place-content: center;
    }

    & input[type="checkbox"]::before {
      content: "";
      width: 0.65em;
      height: 0.65em;
      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
      transform: scale(0);
      transform-origin: bottom left;
      transition: 120ms transform ease-in-out;
      box-shadow: inset 1em 1em var(--form-control-color);
    }

    & input[type="checkbox"]:checked::before {
      transform: scale(1);
    }

    & input[type="checkbox"]:focus {
      outline: max(2px, 0.15em) solid currentColor;
      outline-offset: max(2px, 0.15em);
    }

    & input[type="checkbox"]:disabled {
      --form-control-color: var(--form-control-disabled);
      color: var(--form-control-disabled);
      cursor: not-allowed;
    }

    & input[type="checkbox"][name="byweekday"] {
      border-radius: 50%;
      /* background-color: var(--md-sys-color-surface-dim); */
      display: inline-grid;
      margin: 0 var(--spc-1);
    }

    & input[type="checkbox"][name="byweekday"]:checked {
      border-color: var(--md-sys-color-primary);
    }

    & label:has(input[type="checkbox"][name="byweekday"]) {
      position: relative;
      color: var(--md-sys-color-surface-variant);
    }

    & label:has(input[type="checkbox"][name="byweekday"]:checked) {
      color: var(--md-sys-color-primary);
    }

    & label:has(input[type="checkbox"][name="byweekday"]) > span {
      position: absolute;
      top: 50%;
      left: 50%;
      z-index: 1;
      transform: translate(-50%, -50%);
      font-size: var(--typ-label-sm-fs);
    }

    & input:not([type="color"]) {
      padding: 16px;
      border-radius: 4px;
      border: 1px dotted gray;
    }

    & textarea {
      padding: 24px;
      height: 180px;
      font-size: 1.2rem;
    }
  }

  table {
    width: 100%;
    & thead {
      border-bottom: 1px solid var(--md-sys-color-outline-variant);
    }

    & th {
      padding: var(--spc-4);
      text-align: left;
    }

    & td {
      padding: var(--spc-4);
    }

    & tr:hover {
      background-color: var(--md-sys-color-surface-container-high);
      cursor: pointer;
    }
  }

  body {
    color: var(--md-sys-color-on-background);
    background: var(--color-primary-dark);
  }

  a {
    color: inherit;
    text-decoration: none;
  }

  button {
    background-color: transparent;
    border: none;
    cursor: pointer;
  }

  .btn-type-1 {
    height: var(--spc-10);
    background-color: var(--md-sys-color-primary) !important;
    color: var(--md-sys-color-on-primary);
    border-radius: var(--spc-15);
  }

  ul,
  li {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  p {
    max-width: 500px;
    margin: 16px 0;
  }

  #root {
    height: 90dvh;
    margin: 0 auto;
    padding: 4px;
    overflow: hidden;
    display: grid;
    grid-template-columns: max-content 1fr minmax(300px, 0.4fr);
    grid-template-rows: auto 1fr 56px;
    grid-template-areas:
      "b b b"
      "m m m"
      "c c c"
      "a a a";
    gap: 8px;

    container: root / inline-size;
  }

  #root > header:first-child {
    background-color: rgb(51, 57, 56);
    border-radius: 8px;
    grid-area: a;

    display: flex;
    align-items: center;
    flex-direction: column;

    &.protected {
      flex-direction: column;
    }
  }
  #root > header + header {
    grid-area: b;
    display: flex;
    justify-content: space-between;
  }
  main {
    background-color: rgb(51, 57, 56);
    border-radius: 8px;
    grid-area: m;
    overflow: auto;
  }

  main + aside {
    grid-area: c;

    background-color: rgb(51, 57, 56);
    border-radius: 8px;
  }

  main + footer {
    padding: 24px;
    background-color: var(--md-sys-color-inverse-surface);
    grid-area: d;
  }

  @media (prefers-color-scheme: dark) {
    html {
      & .color-filter-invertable {
        filter: invert(1);
      }
    }
  }
}

@layer utils {
  .blurred-top {
    position: relative;
  }
  .blurred-top::before {
    content: "";
    display: block;
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    height: 80px;

    backdrop-filter: blur(8px);
  }
}

@layer responsive {
  @media screen and (min-width: 768px) {
    #root {
      grid-template-areas:
        "b b b"
        "m m c"
        "a a a";
    }
  }
  @media screen and (min-width: 1024px) {
    #root {
      grid-template-areas:
        "b b b"
        "a m c"
        "a m c";
    }
  }
}

[data-active] {
  position: relative;
}

[data-active] span.colored-segment {
  content: "";
  background-color: rgba(255, 192, 203, 0.355);
  width: 100%;
  height: 16px;
  border-radius: 2px;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
}
